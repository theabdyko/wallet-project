[tool.poetry]
name = "wallet-project"
version = "0.1.0"
description = "A Django project designed with Domain Driven Design (DDD) and SOLID principles for Wallet and Transaction management"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "wallet_project"}]

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0"
djangorestframework = "^3.14"
drf-spectacular = "^0.27"
django-cors-headers = "^4.3"
psycopg2-binary = "^2.9"
python-decouple = "^3.8"
dependency-injector = "^4.41"
gunicorn = "^21.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-django = "^4.7"
pytest-cov = "^4.1"
black = "^23.12"
ruff = "^0.1"
mypy = "^1.8"
factory-boy = "^3.3"
coverage = "^7.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

#[tool.ruff.lint.ignore]
#F405 = ["config/settings/test.py"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"config/settings/test.py" = ["F405"]

[tool.black]
target-version = ['py311']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=wallet_project",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--reuse-db",
    "--create-db",
]
testpaths = ["src/tests"]
